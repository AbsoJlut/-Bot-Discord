import disnake
from disnake.ext import commands
import random
import logging
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class RandBuild(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.perks = [
            '–°–≤—è–∑—å', '–ü—Ä–æ—è–≤–∏ —Å–µ–±—è', '–õ–∏–¥–µ—Ä', '–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –¥—É—Ö–∞', '–ñ–µ–ª–µ–∑–Ω–∞—è –≤–æ–ª—è', '–ö—Ä—É—à–∏—Ç–µ–ª—å', '–õ–æ–≤–∫–æ–µ –ø—Ä–∏–∑–µ–º–ª–µ–Ω–∏–µ', 
            '–ì–æ—Ä–æ–¥—Å–∫–æ–π –±–µ–≥', '–£—Ä–æ–∫–∏ —É–ª–∏—Ü', '–¢—É–∑ –≤ —Ä—É–∫–∞–≤–µ', '–ü–æ–≤—ã—Å–∏—Ç—å —Å—Ç–∞–≤–∫–∏', '–ò–≥—Ä–∞ –≤ –æ—Ç–∫—Ä—ã—Ç—É—é', '–ü–æ–∑–Ω–∞–Ω–∏—è –≤ –±–æ—Ç–∞–Ω–∏–∫–µ', 
            '–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω', '–ë—ã—Å—Ç—Ä—ã–π –∏ —Ç–∏—Ö–∏–π', '–†–µ—à–∞—é—â–∏–π —É–¥–∞—Ä', '–û–±—ä–µ–∫—Ç –æ–¥–µ—Ä–∂–∏–º–æ—Å—Ç–∏', '–û–¥–æ–ª–∂–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è', '–û—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –ø–æ–∑–∞–¥–∏', 
            '–ù–µ—Å–æ–∫—Ä—É—à–∏–º—ã–π', '–ê–ø—Ç–µ–∫–∞—Ä—å', '–ë–µ—Å—Å–æ–Ω–Ω–∏—Ü–∞', '–ü—Ä–æ—Å–Ω–∏—Å—å', '–í—ã–¥–µ—Ä–∂–∫–∞', '–î–µ—Ç–µ–∫—Ç–∏–≤–Ω–æ–µ —á—É—Ç—å–µ', '–í—ã—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º–æ–≥–æ', 
            '–ü–æ—Ç–∞–Ω—Ü—É–π —Å–æ –º–Ω–æ–π', '–£–Ω–∏–∫–∞–ª—å–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å', '–ß–µ—Ä–µ–∑ –∫—Ä–∞–π', '–î–∏–≤–µ—Ä—Å–∏—è', '–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ', '–°–∞–º–æ—É—á–∫–∞', '–£—Ö–æ–¥ –∑–∞ –±–æ–ª—å–Ω—ã–º', 
            '–ü–æ–ª–æ–º–∫–∞', '–ò—Å–∫–∞–∂–µ–Ω–∏–µ', '–°–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ', '–°–∞–º —Å–µ–±–µ –¥–æ–∫—Ç–æ—Ä', '–°–ø—Ä–∏–Ω—Ç–µ—Ä', '–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–∂–∏–≤—à–∏–π', '–¢—Ä–µ–≤–æ–≥–∞', '–ì–∏–±–∫–æ—Å—Ç—å', 
            '–¢–µ—Ö–Ω–∏–∫', '–ë–µ–∑ —Å–æ–∂–∞–ª–µ–Ω–∏—è', '–ö—Ä–µ–ø–∫–∏–π –æ—Ä–µ—à–µ–∫', '–ú—ã –±—É–¥–µ–º –∂–∏—Ç—å –≤–µ—á–Ω–æ', '–°–æ–ª–∏–¥–∞—Ä–Ω–æ—Å—Ç—å', '–†–∞–≤–Ω–æ–≤–µ—Å–∏–µ', '–ù–∞–ø—Ä–æ–ª–æ–º', 
            '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç—å', '–ü—Ä–∏—Å—Ç–µ–≥–Ω–∏—Å—å', '–†–∞—Å–∫–∞—á–∫–∞', '–ù—è–Ω—å–∫–∞', '–¢–æ–≤–∞—Ä–∏—â–µ—Å—Ç–≤–æ', '–í—Ç–æ—Ä–æ–µ –¥—ã—Ö–∞–Ω–∏–µ', '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å–∏–ª–∞', 
            '–§–∏–∫—Å–∞—Ü–∏—è', '–õ—É—á—à–µ –≤–º–µ—Å—Ç–µ', '–õ—é–±—ã–º–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏', '–§–æ—Ä—Å–∞–∂', '–í–µ–∑–µ–Ω–∏–µ', '–†–∞–¥–∏ –ª—é–¥–µ–π', '–û–±–º–∞–Ω –≤–æ –±–ª–∞–≥–æ', '–ë–µ–∑ –æ–≥–ª–∞—Å–∫–∏', 
            '–°–∫—Ä—ã—Ç—ã–π —Å–æ—é–∑', '–ö—Ä–æ–≤–∞–≤—ã–π –¥–æ–≥–æ–≤–æ—Ä', '–û–±–µ—Ä–µ–≥ –¥—É—à–∏', '–í–∏–∑–∏–æ–Ω–µ—Ä', '–û—Ç—á–∞—è–Ω–Ω—ã–µ –º–µ—Ä—ã', '–°—Ç—Ä–æ–∏–º –Ω–∞ –≤–µ–∫–∞', '–ò–∑—É—á–µ–Ω–∏–µ', 
            '–£–ª–æ–≤–∫–∞', '–û—Ç—á–∞—è–Ω–Ω–∞—è –±–æ—Ä—å–±–∞', '–°–∞–º–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ', '–£–¥–∞—Ä–Ω—ã–π –∑–∞–±–µ–≥', '–ó–∞ —á—É–∂–æ–π —Å—á–µ—Ç', '–°—Ç–∏—Å–Ω—É–≤ –∑—É–±—ã', '–°–≤–µ—Ç–æ–≤–∞—è –≥—Ä–∞–Ω–∞—Ç–∞', 
            '–î—É—Ö –Ω–æ–≤–∏—á–∫–∞', '–ü—Ä–æ—Ç–∏–≤–æ–¥–µ–π—Å—Ç–≤–∏–µ', '–ü–æ–ø—Ä–∞–≤–∫–∞', '–§—É–≥–∞—Å–Ω–∞—è –º–∏–Ω–∞', '–î–∞—Ä —É—Ö–æ–¥ –≤ —Ç–µ–Ω—å', '–î–∞—Ä –∫—Ä—É–≥ –∏—Å—Ü–µ–ª–µ–Ω–∏—è', '–Ø—Å–Ω–æ–≤–∏–¥–µ–Ω–∏–µ', 
            '–ü—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ', '–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞', '–î–∞—Ä —ç–∫—Å–ø–æ–Ω–µ–Ω—Ç–∞', '–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–±–æ—Ç–∞', '–≠–º–ø–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–≤—è–∑—å', '–î–∞—Ä —Ç–µ–æ—Ä–∏—è –º—Ä–∞–∫–∞', 
            '–°–æ–±—Ä–∞–Ω–Ω–æ—Å—Ç—å', '–û—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ', '–£—Å–µ—Ä–¥–∏–µ', '–ñ—É—á–æ–∫', '–ù–∏–∂–µ —Ç—Ä–∞–≤—ã', '–ü–æ—Å–ø–µ—à–Ω–æ–µ –ª–µ—á–µ–Ω–∏–µ', '–ü–æ–ª–Ω–∞—è —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–µ–Ω–Ω–æ—Å—Ç—å', 
            '–û–±–æ–¥—Ä–µ–Ω–∏–µ', '–ö–∞–∫ –Ω–æ–≤–µ–Ω—å–∫–∏–π', '–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è', '–£–º—É–¥—Ä–µ–Ω–Ω—ã–π —Ç—É–º–∞–Ω–æ–º', '–ë—ã—Å—Ç—Ä—ã–π –≥–∞–º–±–∏—Ç', '–î—Ä—É–∂–µ—Å–∫–æ–µ —Å–æ—Å—Ç—è–∑–∞–Ω–∏–µ', 
            '–ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –±—ã—Å—Ç—Ä–∞—è –ø–∞—Ä–∞', '–ù–∞ –≤–æ–ª—é', '–ó–∞–ø–∞—Å–Ω–æ–π –∏–≥—Ä–æ–∫', '–ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –æ–±—â–∞—è —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å', '–í—ã—à–µ –≥–æ–ª–æ–≤—ã', 
            '–†–µ–º–æ–Ω—Ç–Ω–∏–∫', '–ü—Ä–∏–∑–≤–∞–Ω–∏–µ', '–£—Ç–∏–ª–∏–∑–∞—Ç–æ—Ä', '–î—Ä–∞–º–∞—Ç—É—Ä–≥–∏—è', '–ü–∞—Ä—Ç–Ω–µ—Ä –ø–æ —Å—Ü–µ–Ω–µ', '–í–æ—Ç —ç—Ç–æ –ø–æ–≤–æ—Ä–æ—Ç', '–°—á–∞—Å—Ç–ª–∏–≤–∞—è –∑–≤–µ–∑–¥–∞', 
            '–•–∏–º–∏—á–µ—Å–∫–∞—è –ª–æ–≤—É—à–∫–∞', '–õ–µ–≥–∫–æ—Å—Ç—É–ø', '–í–æ–∏–Ω —Å–≤–µ—Ç–∞', '–î–∞—Ä –æ—Å–≤–µ—â–µ–Ω–∏–µ', '–î–µ–¥–ª–∞–π–Ω', '–ü—Ä–µ–¥—á—É–≤—Å—Ç–≤–∏–µ', '–°–∏–ª–∞ –≤–æ –º—Ä–∞–∫–µ', '–î–µ—Ä–∑–æ—Å—Ç—å', 
            '–ó–µ—Ä–∫–∞–ª—å–Ω–∞—è –∏–ª–ª—é–∑–∏—è', '–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –±–∞—Ä–¥–∞', '–ó–∞–º—Ä–∏ –∏ —É–≤–∏–¥–∏—à—å', '–¢–µ–º–Ω–æ–µ —á—É–≤—Å—Ç–≤–æ', '–≠—Ç–æ–º—É –Ω–µ –±—ã–≤–∞—Ç—å', '–ú–µ–ª–∫–∞—è –¥–∏—á—å', 
            '–ú—É—Ä–∞—à–∫–∏ –ø–æ —Å–ø–∏–Ω–µ', '–ú—ã —Å–ø—Ä–∞–≤–∏–º—Å—è', '–î–µ–∂–∞–≤—é', '–ß–∞—Ä—ã –ø–∞—É–∫–∏', '–ù–∏–∫—Ç–æ –Ω–µ –æ—Å—Ç–∞–ª—Å—è –ø–æ–∑–∞–¥–∏', '–ú–∞—Ä–æ–¥–µ—Ä—Å–∫–æ–µ —á—É—Ç—å–µ', '–ù–∞–¥–µ–∂–¥–∞'
        ]  # –°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –ø–µ—Ä–∫–æ–≤

    @commands.slash_command(description="–°–æ—Å—Ç–∞–≤–ª—è–µ—Ç –±–∏–ª–¥ –¥–ª—è DbD")
    async def randombuild(self, ctx):
        try:
            # –í—ã–±–∏—Ä–∞–µ–º 4 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–∫–∞
            selected_perks = random.sample(self.perks, 4)
            perk1, perk2, perk3, perk4 = selected_perks

            # –°–æ–∑–¥–∞–µ–º Embed —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–µ—Ä–∫–∞—Ö
            embed = disnake.Embed(title="üé≤ –†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä –±–∏–ª–¥–æ–≤ DbD", color=0x00ff00)
            embed.description = "–í–æ—Ç –≤–∞—à —Å–ª—É—á–∞–π–Ω—ã–π –±–∏–ª–¥:"

            # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–∫–∏ –≤ Embed
            embed.add_field(name="–ü–µ—Ä–∫ 1", value=perk1, inline=True)
            embed.add_field(name="–ü–µ—Ä–∫ 2", value=perk2, inline=True)
            embed.add_field(name="–ü–µ—Ä–∫ 3", value=perk3, inline=True)
            embed.add_field(name="–ü–µ—Ä–∫ 4", value=perk4, inline=True)

            # –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–µ—Ä–∫–æ–≤
            files = []
            for perk in selected_perks:
                image_path = f'imageperk/{perk}.webp'
                if os.path.exists(image_path):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
                    file = disnake.File(image_path, filename=f'{perk}.webp')
                    files.append(file)
                    embed.set_image(url=f"attachment://{perk}.webp")  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è Embed
                else:
                    logger.warning(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–µ—Ä–∫–∞ {perk} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {image_path}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Embed —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
            if files:
                await ctx.send(embed=embed, files=files)
            else:
                await ctx.send("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø–µ—Ä–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.", ephemeral=True)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ randombuild: {e}")
            await ctx.send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –±–∏–ª–¥–∞.", ephemeral=True)

def setup(bot):
    bot.add_cog(RandBuild(bot))